    For this program, I have 3 functions and import 3 different libraries. The 3 libraries that I import are csv, os, and re. I use the 
csv library to read and write to the csv file. I use the os library to count the number of files within the chat_sessions folder in 
data. I use the re library to do regular expression search in the user query and in the init function. I include a while loop so that 
the user can choose when to quit.

    The first function called is the initCSV() function. It is called before the while loop and the return value is set to the variable, 
fullStat. This function finds the file names of all the files in the chat_sessions folder and puts them in a list. Then a loop iterates
through the list. While iterating through the list, the function opens the file, iterating through line by line, and checks to see if
the line contains either "<Bot>:" or "<User>:" or "seconds" within the line. If so, it updates the corresponding variable. After closing
the file reader, the csv file is updated with the correct values. The order of the csv file is session number, file name, user utterance,
system utterance, and time. After iterating through all of the files, the function returns a list containing the total number of files,
total number of user utterances, the total number of system utterances, and the total time.

    The program then creates a variable set to false and then creates a few regular expressions that will be compared to the 
user input. Within the while loop, the user is prompted and the input is set to all capital letters. Then it searches for the regular
expressions that were created just before the while loop. If none of the regular expressions are matched, then it prompts the user to 
only input one of the inputs that would match. If the first regular expression matches, then the summary of all the chat sessions are
printed. These values were stored in the fullStat list. If the second regular expression matches, then the number from the input is 
set to a variable called session. Then the function summary(number) is called. If the third expression matches, then the exact process
that the happened after the second expression matched occurs except the showChat(number) function is called. If the last regular 
expression is matched, then the program sets the boolean value to true and breaks the loop.

    The summary(number) function creates a variable called count and then opens the csv file reader. The csv file reader goes through
the csv file line by line and checks to see if the session number is equal to the number inputed into the function. If it is, then the 
function prints the summary. After the function checks to see if the number inputed is greater than or equal to the count variable.
If it is, then it prints a statement that tells the user an error occurred. Finally, the function closes the file reader.

    The showChat(number) function also creates a variable called count and then opens the csv file reader, but it also creates a 
fileName variable that is empty. The csv file reader goes through the file line by line and checks to see if the session number is 
equal to the number inputed into the function. If it is, then the function sets the fileName variable to the fileName in the csv file.
The file reader is then closed, and the count variable and number variable are compared. If the number variable is greater than or 
equal to the count variable, then a statement is printed and the function returns nothing, forcing the function to stop there. If the
count variable is greater than the number variable, then the opens the file reader whose name is stored in the fileName variable. The 
function prints each line in the file to the terminal and then closes the file reader.